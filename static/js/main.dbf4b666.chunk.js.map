{"version":3,"sources":["logo.svg","Movie.js","MoviesList.js","MovieDetail.js","App.js","index.js"],"names":["module","exports","Movie","movie","to","id","Poster","src","poster_path","alt","title","styled","img","MoviesList","state","movies","fetch","res","json","this","setState","results","console","log","MovieGrid","map","key","PureComponent","div","MovieDetail","props","match","params","MovieWrapper","backdrop","backdrop_path","MovieInfo","release_date","overview","Component","App","className","logo","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,8YCM3C,IAceC,EARD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACZ,kBAAC,IAAD,CAAMC,GAAE,yBAAoBD,EAAME,KAChC,kBAAC,IAAD,CAAWA,GAAE,UAAKF,EAAME,KACtB,kBAACC,EAAD,CAAQC,IAAG,UATG,mCASH,OAAmBJ,EAAMK,aAAeC,IAAKN,EAAMO,WAavDJ,EAASK,IAAOC,IAAV,K,kQCWJC,E,2MAhCbC,MAAQ,CACNC,OAAQ,I,8NAMYC,MAAM,iI,cAAlBC,E,gBACeA,EAAIC,O,OAAnBH,E,OACNI,KAAKC,SAAS,CACZL,OAAQA,EAAOM,U,kDAGjBC,QAAQC,IAAR,M,+IAMF,OADAD,QAAQC,IAAIJ,KAAKL,MAAMC,QAErB,kBAACS,EAAD,KACGL,KAAKL,MAAMC,OAAOU,KAAI,SAACtB,GAAD,OACrB,kBAAC,EAAD,CACEuB,IAAKvB,EAAME,GACXF,MAAOA,Y,GAzBMwB,iBAmCnBH,EAAYb,IAAOiB,IAAV,K,0kBCnCf,IAwCeC,E,2MApCbf,MAAQ,CACNX,MAAO,I,8NAMaa,MAAM,sCAAD,OAAuCG,KAAKW,MAAMC,MAAMC,OAAO3B,GAA/D,6D,cAAjBY,E,gBACcA,EAAIC,O,OAAlBf,E,OACNgB,KAAKC,SAAS,CACZjB,MAAOA,I,kDAGTmB,QAAQC,IAAR,M,+IAIM,IACApB,EAAUgB,KAAKL,MAAfX,MACR,OACE,kBAAC8B,EAAD,CAAcC,SAAQ,UAvBN,oCAuBM,OAAqB/B,EAAMgC,gBAC/C,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAW/B,GAAE,UAAKF,EAAME,KACtB,kBAACC,EAAD,CAAQC,IAAG,UA3BH,mCA2BG,OAAmBJ,EAAMK,aAAeC,IAAKN,EAAMO,SAEhE,6BACE,4BAAKP,EAAMO,OACX,4BAAKP,EAAMkC,cACX,2BAAIlC,EAAMmC,iB,GA7BIC,aAuCpBN,EAAetB,IAAOiB,IAAV,KAGE,SAAAE,GAAK,OAAIA,EAAMI,YAS7BE,EAAYzB,IAAOiB,IAAV,KC/BAY,EAhBH,kBACV,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,IAAD,CAAMrC,GAAG,kBACP,yBAAKG,IAAKmC,IAAMjC,IAAI,mBAGxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,iBAAiBC,UAAWhC,IAC9C,kBAAC,IAAD,CAAO+B,KAAK,qBAAqBC,UAAWhB,QClBpDiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dbf4b666.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ae29b6c6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Overdrive from 'react-overdrive';\n\nconst POSTER_PATH = 'https://image.tmdb.org/t/p/w154';\n\n// Functional Stateless Components\n// This should be used when you are not using lifecycle methods or state refs.\n// ES6 Object Destruction: Because of object destructuring, we can use {movie} inplace of props. \n// {`{variable.here}`}  — String Interpolation \nconst Movie = ({movie}) => (\n  <Link to={`/react-moviedb/${movie.id}`}>\n    <Overdrive id={`${movie.id}`}>\n      <Poster src={`${POSTER_PATH}${movie.poster_path}`} alt={movie.title} />\n    </Overdrive>\n  </Link>\n);\n\nexport default Movie;\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport const Poster = styled.img`\n  box-shadow: 0 0 35px black;\n`;","import React from 'react';\nimport { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport Movie from './Movie';\n\n\nclass MoviesList extends PureComponent {  \n  state = {\n    movies: []\n  }\n  \n  // Lifecycle Method\n  async componentDidMount() {\n    try {\n      const res = await fetch('https://api.themoviedb.org/3/search/movie?api_key=500892bdb8989fc3ae5765f1838aa9e1&language=en-US&query=harry%20potter&page=1');\n      const movies = await res.json();\n      this.setState({\n        movies: movies.results\n      })\n    } catch(e) {\n      console.log(e);\n    }\n  }\n  \n  render() {\n    console.log(this.state.movies);\n    return (\n      <MovieGrid>\n        {this.state.movies.map((movie) => (\n          <Movie \n            key={movie.id}\n            movie={movie}\n          />\n        ))}\n      </MovieGrid>\n    );\n  }\n}\n\nexport default MoviesList;\n\nconst MovieGrid = styled.div`\n  display: grid;\n  padding: 1rem;\n  grid-template-columns: repeat(6, 1fr);\n  grid-row-gap: 1rem;\n\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;","import React from 'react';\nimport { Component } from 'react';\nimport { Poster } from './Movie';\nimport styled from 'styled-components';\nimport Overdrive from 'react-overdrive';\n\nconst POSTER_PATH = 'https://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'https://image.tmdb.org/t/p/w1280';\n\nclass MovieDetail extends Component {  \n  state = {\n    movie: {}\n  }\n  \n  // Lifecycle Method\n  async componentDidMount() {\n    try {\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=500892bdb8989fc3ae5765f1838aa9e1&language=en-US`);\n      const movie = await res.json();\n      this.setState({\n        movie: movie\n      })\n    } catch(e) {\n      console.log(e);\n    }\n  }\n  \n  render() {\n    const { movie } = this.state;\n    return (\n      <MovieWrapper backdrop={`${BACKDROP_PATH}${movie.backdrop_path}`}>\n        <MovieInfo>\n          <Overdrive id={`${movie.id}`}>\n            <Poster src={`${POSTER_PATH}${movie.poster_path}`} alt={movie.title} />\n          </Overdrive>\n          <div>\n            <h1>{movie.title}</h1>\n            <h3>{movie.release_date}</h3>\n            <p>{movie.overview}</p>\n          </div>\n        </MovieInfo>\n      </MovieWrapper>\n    );\n  }\n}\n\nexport default MovieDetail;\n\nconst MovieWrapper = styled.div`\n  position: relative;\n  padding-top: 50vh;\n  background: url(${props => props.backdrop}) no-repeat;\n  background-size: cover;\n  background-position: center;\n\n  @media (max-width: 768px) {\n    padding-top: 25vh;\n  }\n`;\n\nconst MovieInfo = styled.div`\n  background: #eee;\n  text-align: left;\n  padding: 2rem 10%;\n  display: flex;\n\n  > div {\n    margin-left: 20px;\n  }\n\n  img {\n    position: relative;\n    top: -5rem;\n  }\n  \n  @media (max-width: 768px) {\n    display: block;\n  }\n`;","import React from 'react';\nimport {\n  BrowserRouter as Router, \n  Route,\n  Switch,\n  Link\n} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport MoviesList from './MoviesList';\nimport MovieDetail from './MovieDetail';\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Link to=\"/react-moviedb\">\n          <img src={logo} alt=\"MovieDB logo\" />\n        </Link>\n      </header>\n      <Switch>\n        <Route exact path=\"/react-moviedb\" component={MoviesList} />\n        <Route path=\"/react-moviedb/:id\" component={MovieDetail} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}